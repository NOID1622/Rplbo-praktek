public class Player {
    // Atribut, konstruktor, dan metode lainnya...

    public void getInfo() {
        System.out.println("Username: " + username);
        System.out.println("Level: " + level);
        System.out.println("Money: " + money);
        System.out.println("HP: " + HP);
        System.out.println("Weapon: " + getWeaponName());
        System.out.println("Movement: " + (isWalk ? "Running" : "Walking"));
    }

    private String getWeaponName() {
        switch (weapon) {
            case 0:
                return "Tangan kosong";
            case 1:
                return "Pisau";
            case 2:
                return "Tongkat Sihir";
            case 3:
                return "Tongkat";
            case 4:
                return "Katana";
            default:
                return "Senjata tidak dikenal";
        }
    }
}


public class Karakter {
    // Atribut dan konstruktor lainnya...

    public void buyWeapon(int weaponId) {
        // Implementasi pembelian senjata sesuai dengan aturan yang telah ditentukan
        switch (weaponId) {
            case 1:
                // Pisau
                weapon = 1;
                money -= 500;
                break;
            case 2:
                // Tongkat Sihir
                weapon = 2;
                money -= 3000;
                break;
            case 3:
                // Tongkat
                weapon = 3;
                money -= 2000;
                break;
            case 4:
                // Katana
                weapon = 4;
                money -= 4000;
                break;
            default:
                // Senjata tidak dikenali
                System.out.println("Senjata tidak dikenali.");
        }
    }

    // Metode dan atribut lainnya sesuai kebutuhan
}



// Class Player
public class Player {
    protected String username;
    protected int level;
    protected int money;
    protected int HP;
    protected int weapon;
    protected boolean isWalk;

    public Player(String username, int level, int money, int HP, int weapon, boolean isWalk) {
        this.username = username;
        this.level = level;
        this.money = money;
        this.HP = HP;
        this.weapon = weapon;
        this.isWalk = isWalk;
    }

    public void levelUp() {
        level++;
    }

    public void buyWeapon(int weapon) {
        // Implementation according to the provided rules
    }

    public void abilityAttack(Player character) {
        // Implementation according to the provided rules
    }

    public void normalAttack(Player character) {
        // Implementation according to the provided rules
    }

    public void walk(boolean type) {
        // Implementation according to the provided rules
    }

    public void getInfo() {
        // Implementation according to the provided rules
    }
}

// Class Ninja
public class Ninja extends Player {
    private boolean isAbilityReady;

    public Ninja(String username, int level, int money, int HP, int weapon, boolean isWalk, boolean isAbilityReady) {
        super(username, level, money, HP, weapon, isWalk);
        this.isAbilityReady = isAbilityReady;
    }

    @Override
    public void abilityAttack(Player character) {
        // Implementation according to the provided rules for Ninja's abilityAttack
    }

    @Override
    public void normalAttack(Player character) {
        // Implementation according to the provided rules for Ninja's normalAttack
    }

    @Override
    public void walk(boolean type) {
        // Implementation according to the provided rules for Ninja's walk
    }

    @Override
    public void getInfo() {
        // Implementation according to the provided rules for Ninja's getInfo
    }
}

// Class Penyihir
public class Penyihir extends Player {
    private boolean isAbilityReady;

    public Penyihir(String username, int level, int money, int HP, int weapon, boolean isWalk, boolean isAbilityReady) {
        super(username, level, money, HP, weapon, isWalk);
        this.isAbilityReady = isAbilityReady;
    }

    @Override
    public void abilityAttack(Player character) {
        // Implementation according to the provided rules for Penyihir's abilityAttack
    }

    @Override
    public void normalAttack(Player character) {
        // Implementation according to the provided rules for Penyihir's normalAttack
    }

    @Override
    public void walk(boolean type) {
        // Implementation according to the provided rules for Penyihir's walk
    }

    @Override
    public void getInfo() {
        // Implementation according to the provided rules for Penyihir's getInfo
    }
}
